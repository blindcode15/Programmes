name: iOS Build (XcodeGen)

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build MoodDiary (iOS 17)
    runs-on: macos-14
    steps:
      - name: Select Xcode 16
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.*'
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install XcodeGen
        run: |
          brew update
          brew install xcodegen

      - name: Generate Xcode Project
        run: xcodegen generate

      - name: Show Xcode version
        run: xcodebuild -version

      - name: Build for iOS Simulator (capture full log)
        run: |
          set +e
          set -o pipefail
          export NSUnbufferedIO=YES
          xcodebuild \
            -project MoodDiary.xcodeproj \
            -scheme MoodDiary \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.5' \
            -configuration Debug \
            build \
            CODE_SIGNING_ALLOWED=NO 2>&1 | tee build-sim.log
          CODE=${PIPESTATUS[0]}
          echo "xcodebuild exit code: $CODE"
          exit $CODE
      - name: Upload build log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-sim-log
          path: build-sim.log
      - name: Record short simulator video (app launch)
        run: |
          set -euo pipefail
          VIDEO="$GITHUB_WORKSPACE/app-demo.mp4"
          # Determine simulator build output path
          SETTINGS=$(xcodebuild -project MoodDiary.xcodeproj -scheme MoodDiary -sdk iphonesimulator -configuration Debug -showBuildSettings)
          TARGET_BUILD_DIR=$(echo "$SETTINGS" | awk -F" = " '/TARGET_BUILD_DIR/ {print $2; exit}')
          APP_PATH="$TARGET_BUILD_DIR/MoodDiary.app"
          echo "APP_PATH=$APP_PATH"
          # Pick an available simulator UDID (prefer iPhone 15, otherwise any iPhone)
          DEVICE=$(xcrun simctl list devices available | awk -F '[()]' '/iPhone 15/ {print $2; exit}')
          if [ -z "$DEVICE" ]; then
            DEVICE=$(xcrun simctl list devices available | awk -F '[()]' '/iPhone/ {print $2; exit}')
          fi
          echo "Using DEVICE=$DEVICE"
          # Boot and wait
          xcrun simctl boot "$DEVICE" || true
          xcrun simctl bootstatus "$DEVICE" -b || true
          # Install app
          xcrun simctl install "$DEVICE" "$APP_PATH" || true
          # Start recording
          xcrun simctl io "$DEVICE" recordVideo --codec=h264 "$VIDEO" &
          REC_PID=$!
          # Launch app and wait, then stop recording
          xcrun simctl launch "$DEVICE" com.yourcompany.mood || true
          sleep 10
          kill $REC_PID || true
          wait $REC_PID || true
          ls -l "$VIDEO" || true
      - name: Upload simulator video
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: simulator-video
          path: app-demo.mp4
      - name: Run UI snapshot tests
        run: |
          set -euo pipefail
          xcodebuild \
            -project MoodDiary.xcodeproj \
            -scheme MoodDiary \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.5' \
            -configuration Debug \
            -only-testing:MoodDiaryScreenshots \
            test \
            CODE_SIGNING_ALLOWED=NO \
            | xcpretty -c || true
      - name: Collect snapshots
        run: |
          mkdir -p snapshots
          # Grab only our test PNGs (prefixed with MD_) from simulator temp dirs
          find /private/var/folders -type f -name 'MD_*.png' -maxdepth 6 -print -exec cp -v {} snapshots/ \; 2>/dev/null || true
          ls -la snapshots || true
      - name: Upload snapshots
        uses: actions/upload-artifact@v4
        with:
          name: ui-snapshots
          path: snapshots
